# This is a default home.nix generated by the follwing hone-manager command
# 
# home-manager init ./

{ config, lib, pkgs, ... }:

{
  # Home Manager needs a bit of information about you and the paths it should
  # manage.
  home.username = lib.mkDefault "hugo";
  home.homeDirectory = lib.mkDefault "/home/${config.home.username}";

  # This value determines the Home Manager release that your configuration is
  # compatible with. This helps avoid breakage when a new Home Manager release
  # introduces backwards incompatible changes.
  #
  # You should not change this value, even if you update Home Manager. If you do
  # want to update the value, then make sure to first check the Home Manager
  # release notes.
  home.stateVersion = "24.05"; # Please read the comment before changing.

  # The home.packages option allows you to install Nix packages into your
  # environment.
  home.packages = with pkgs; [
    nerd-fonts.iosevka
    nerd-fonts.iosevka-term
    catppuccin-cursors.mochaPeach

    libnotify

    # # Adds the 'hello' command to your environment. It prints a friendly
    # # "Hello, world!" when run.
    # pkgs.hello

    # # It is sometimes useful to fine-tune packages, for example, by applying
    # # overrides. You can do that directly here, just don't forget the
    # # parentheses. Maybe you want to install Nerd Fonts with a limited number of
    # # fonts?
    # (pkgs.nerdfonts.override { fonts = [ "FantasqueSansMono" ]; })

    # # You can also create simple shell scripts directly inside your
    # # configuration. For example, this adds a command 'my-hello' to your
    # # environment:
    # (pkgs.writeShellScriptBin "my-hello" ''
    #   echo "Hello, ${config.home.username}!"
    # '')
  ];

  home.pointerCursor = {
    name = "catppuccin-mocha-peach-cursors";
    package = pkgs.catppuccin-cursors.mochaPeach;
    size = 16;
    # gtk.enable = true;
  };

  # Home Manager is pretty good at managing dotfiles. The primary way to manage
  # plain files is through 'home.file'.
  home.file = {
    ".config/niri/config.kdl".source = ./config.kdl;

    # # Building this configuration will create a copy of 'dotfiles/screenrc' in
    # # the Nix store. Activating the configuration will then make '~/.screenrc' a
    # # symlink to the Nix store copy.
    # ".screenrc".source = dotfiles/screenrc;

    # # You can also set the file content immediately.
    # ".gradle/gradle.properties".text = ''
    #   org.gradle.console=verbose
    #   org.gradle.daemon.idletimeout=3600000
    # '';
  };

  # Home Manager can also manage your environment variables through
  # 'home.sessionVariables'. If you don't want to manage your shell through Home
  # Manager then you have to manually source 'hm-session-vars.sh' located at
  # either
  #
  #  ~/.nix-profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  ~/.local/state/nix/profiles/profile/etc/profile.d/hm-session-vars.sh
  #
  # or
  #
  #  /etc/profiles/per-user/m3tam3re/etc/profile.d/hm-session-vars.sh
  #
  # home.sessionVariables = {
  #   EDITOR = "emacs";
  # };

  programs.alacritty = {
    enable = true;
    settings = {
      window = {
        padding = { x = 10; y = 10; };
        dynamic_padding = true;
        decorations = "None";
        opacity = 0.9;
      };
      font = {
        size = 14;
        normal = {
          family = "IosevkaTerm Nerd Font Mono";
          style = "Regular";
        };
        bold = {
          family = "IosevkaTerm Nerd Font Mono";
          style = "Bold";
        };
        italic = {
          family = "IosevkaTerm Nerd Font Mono";
          style = "Italic";
        };
        bold_italic = {
          family = "IosevkaTerm Nerd Font Mono";
          style = "Bold Italic";
        };
      };
      cursor.style.blinking = "Never";
      mouse.hide_when_typing = true;
    };
  };

  programs.vim = {
    enable = true;
    defaultEditor = true;
    extraConfig = ''
      set undodir=~/.vim/undo
      set undofile
      set number
      set relativenumber
      set shiftwidth=2
      set tabstop=2
      set expandtab
      set scrolloff=8
      set nowrap
      set cursorline
      set fillchars+=vert:â”‚,eob:\ 
      set termguicolors
      colorscheme catppuccin_mocha
      autocmd SourcePost * hi Normal guibg=NONE ctermbg=NONE
                       \ | hi CursorLine guibg=NONE ctermbg=NONE 
                       \ | hi StatusLine guibg=NONE ctermbg=NONE 
                       \ | hi StatusLineNC guibg=NONE ctermbg=NONE 
                       \ | hi SignColumn guibg=NONE ctermbg=NONE 
                       \ | hi VertSplit guifg=white ctermfg=white 
    '';
    plugins = [ pkgs.vimPlugins.catppuccin-vim ];
  };

  programs.firefox = {
    enable = true;
    languagePacks = [ "fr" "en-US" ];
    policies = {
      DisablePocket = true;
      DisableFirefoxAccounts = true;
      DisableAccounts = true;
      DontCheckDefaultBrowser = true;
      DisplayBookmarksToolbar = "never";

      ExtensionSettings = {
        "*".installation_mode = "blocked";
        "uBlock0@raymondhill.net" = {
          install_url = "https://addons.mozilla.org/firefox/downloads/latest/ublock-origin/latest.xpi";
          installation_mode = "force_installed";
        };
      };

      Preferences =
        let
          lock-false = {
            Value = false;
            Status = "locked";
          };
        in
        {
          "extensions.pocket.enabled" = lock-false;
          "browser.newtabpage.activity-stream.showSponsored" = lock-false;
          "browser.newtabpage.activity-stream.system.showSponsored" = lock-false;
          "browser.newtabpage.activity-stream.showSponsoredTopSites" = lock-false;
        };
    };
  };

  # Let Home Manager install and manage itself.
  programs.home-manager.enable = true;
}
